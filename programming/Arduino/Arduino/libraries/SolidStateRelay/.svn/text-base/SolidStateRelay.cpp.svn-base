#include <SPI.h>

#include "SolidStateRelay.h"

void SolidStateRelay::turnOn()
{
  this->setState(HIGH);
}
void SolidStateRelay::turnOff()
{
  this->setState(LOW);
}
SolidStateRelay::SolidStateRelay(int pin)
{
	pinMode(pin, OUTPUT);
 	this->setIOPin(pin);
}
SolidStateRelay::SolidStateRelay(int pin,bool state)
{
	pinMode(pin, OUTPUT);
 	 this->setIOPin(pin);
  	if(state)this->setState(HIGH);
  	else this->setState(LOW);
}
/*void SolidStateRelay::loadObject(String obj)
{
	char charArray[255];
  	obj.toCharArray(charArray,255);
  	
  	int counter = 0;
  	String ioPinString;
  	while(charArray[counter] !=':')
  	{
  		ioPinString += charArray[counter];
  		counter++;
  	}
  	char charBuf[50];
    ioPinString.toCharArray(charBuf, 10);
  	this->id = atoi(charBuf);
  	free(charBuf);
  	
  	this->lastState = charArray[++counter] - '0';
}*/
String SolidStateRelay::getClassName()
{
	return String("SolidStateRelay");
}
int SolidStateRelay::getState()
{
  return this->lastState;
}
void SolidStateRelay::setState(int state)
{
  this->lastState = state;
  digitalWrite(this->getIOPin(),state);
}
void SolidStateRelay::setIOPin(int pin)
{
	this->pin = pin;
}
int SolidStateRelay::getIOPin()
{
	return this->pin;
}

String SolidStateRelay::saveObject()
{
	return NULL;
}
IPersistable* SolidStateRelay::cloneWithParams(String params)
{
	return NULL;
}

  	
  	
  	
  	
  	